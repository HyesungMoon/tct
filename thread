package tct.thread;

import java.util.concurrent.locks.ReentrantLock;

// MUTEX SAMPLE
class ThreadClass extends Thread{
	static ReentrantLock lock = new ReentrantLock();
	
	String thread_name;
	
	public ThreadClass(String name){
		this.thread_name = name;
	}
	
	public void run(){
		lock.lock();
		try{
			PrintNums(thread_name);
		}
		finally {
			lock.unlock();
		}
	}
	
	static void PrintNums(String str){
		int i;
		System.out.println(str);
		
		for(i=1; i<30; i++){
			System.out.print( i + " ");
		}
		System.out.println();
	}
}

public class ThreadSample {
	public static void main(String[] args) throws Exception{
		ThreadClass tc1 = new ThreadClass("[thread 1]");
		ThreadClass tc2 = new ThreadClass("[thread 2]");
		
		tc1.start();
		tc2.start();
		
//		Thread.sleep(500);
		ThreadClass.lock.lock();
		
		try{
			ThreadClass.PrintNums("[Main]");
		}
		finally {
			ThreadClass.lock.unlock();
		}
		
		tc1.join();
		tc2.join();
	}
}
